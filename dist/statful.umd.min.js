/**
* statful-client-javascript 2.0.2
* Copyright 2017 Statful <https://www.statful.com/>
*/

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.statful=t()}(this,function(){"use strict";function e(e){this.debugEnabled=e||!1}function t(t){t=t||{};var r,n=this;this.config={},this.constants={aggregationList:["avg","count","sum","first","last","p90","p95","min","max"],aggregationFrequencyList:[10,30,60,120,180,300]},Object.keys(t).forEach(function(e){n.config[e]=t[e]}),this.listQueues=[],r=new e(n.config.debug),this.sendRequest=function(e,n){var i=[this.config.apiAddress,e].join("/");r.debug("Request: "+i,n);var a=new XMLHttpRequest;a.open("POST",i,!0),a.timeout=t.timeout,a.setRequestHeader("Content-type","application/json"),a.send(n),a.onreadystatechange=function(){200==a.status||201==a.status?r.debug("Successfully send metric"):r.debug("Error send metric",i,a.status)}},this.registerQueue=function(e,t,n){if(n=n||this.config.flushInterval,"string"==typeof e&&"number"==typeof n){var i=this;return this.listQueues[e]={data:[],endpoint:t},this.listQueues[e].timer=setInterval(function(){var t=i.listQueues[e];t.data.length>0&&(i.config.dryrun?r.debug("Dryrun data",t.endpoint,t.data):i.sendRequest(t.endpoint,JSON.stringify(t.data)),t.data=[])},n),!0}return!1},this.unregisterQueue=function(e){this.listQueues[e]&&(clearInterval(this.listQueues[e].timer),this.listQueues[e]=void 0)},this.addItemToQueue=function(e,t){var n=(t.sampleRate||this.config.sampleRate||100)/100;return this.listQueues[e]&&Math.random()<=n?(this.listQueues[e].data.push(t),!0):(r.debug("Metric was discarded due to sample rate."),!1)},this.setAggregations=function(e,t,r){function n(e,t,r){return e&&r.indexOf(e)===t}var i=t;return i=i.concat(r).filter(n),i=e?i.concat(e).filter(n):i||[],this.filterAggregations(i)},this.setTags=function(e,t,r,n){var i={};return Object.keys(t).forEach(function(e){i[e]=t[e]}),Object.keys(r).forEach(function(e){i[e]=r[e]}),Object.keys(e).forEach(function(t){i[t]=e[t]}),!i.app&&n&&(i.app=n),i},this.setAggregationFrequency=function(e,t,r){var n=t;return r&&(n=r),e&&(n=e),this.filterAggregationFrequency(n)},this.filterAggregations=function(e){var t=this.constants.aggregationList;return(e=e||[]).filter(function(e){return-1!==t.indexOf(e)})},this.filterAggregationFrequency=function(e){var t=10;return this.constants.aggregationFrequencyList.indexOf(e)>-1&&(t=e),t}}e.prototype.info=function(){if(this.debugEnabled){var e=Array.prototype.slice.call(arguments);console.info.apply(console,e)}},e.prototype.debug=function(){if(this.debugEnabled){var e=Array.prototype.slice.call(arguments);console.debug.apply(console,e)}},e.prototype.error=function(){if(this.debugEnabled){var e=Array.prototype.slice.call(arguments);console.error.apply(console,e)}};var r,n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i={dryrun:!1,debug:!1,app:void 0,namespace:"web",tags:{},aggregations:[],aggregationFrequency:10,timer:{tags:{unit:"ms"},aggregations:["avg","p90","count"]},counter:{tags:{},aggregations:["sum","count"]},gauge:{tags:{},aggregations:["last"]},timeout:2e3,flushInterval:1e4,sampleRate:100},a={config:{apiAddress:"https://beacon.statful.com"},endpoints:{metrics:"beacon/metrics"},perf:window.performance,initialize:function(a){var s=this;s.mergeConfigs=function(e){"object"===(void 0===e?"undefined":n(e))&&null!==e||(e={}),Object.keys(i).forEach(function(e){s.config[e]=i[e]}),Object.keys(e).forEach(function(t){s.config[t]=e[t]})},s.metricsData=function(e,t,r,n,i,a,o,u){return{name:e,type:t,value:r,tags:s.util.setTags(n||{},s.config.tags,s.config[t].tags,s.config.app),aggregations:s.util.setAggregations(i,s.config.aggregations,s.config[t].aggregations),aggregationFrequency:s.util.setAggregationFrequency(a,s.config.aggregationFrequency,s.config[t].aggregationFrequency),namespace:o||s.config.namespace,sampleRate:u||s.config.sampleRate}},this.mergeConfigs(a),r=new e(s.config.debug),s.util=new t({apiAddress:this.config.apiAddress,debug:this.config.debug,dryrun:this.config.dryrun,flushInterval:this.config.flushInterval,timeout:this.config.timeout}),s.util.registerQueue("metrics",this.endpoints.metrics,this.config.flushInterval)},measureTimeUserTiming:function(e){var t,n=a.perf.getEntriesByName(e).filter(function(e){return"measure"===e.entryType});return n.length>0?t=n[n.length-1].duration:r.debug("Measure "+e+" not found"),t},clearMarks:function(e){try{e?e.forEach(function(e){e&&a.perf.clearMarks(e)}):a.perf.clearMarks()}catch(e){r.error(e)}},clearResources:function(){try{a.perf.clearResourceTimings()}catch(e){r.error(e)}},clearMeasures:function(e){try{e?e.forEach(function(e){a.perf.clearMeasures(e)}):a.perf.clearMeasures()}catch(e){r.error(e)}},registerMark:function(e){try{r.debug("Register Mark",e),e?a.perf.mark(e):r.error("Undefined resource name to register as a mark")}catch(e){r.error(e)}},registerMeasure:function(e,t,n){try{if(r.debug("Register Measure",e,t,n),e){var i={clearMarks:!1,clearMeasures:!1};n=n||{},Object.keys(n).forEach(function(e){i[e]=n[e]}),i.endMark||(this.registerMark(e),i.endMark=e),a.perf.measure(e,i.startMark,i.endMark);var s=this.measureTimeUserTiming(e);s?this.util.addItemToQueue("metrics",new this.metricsData(t,"timer",s,i.tags,i.aggregations,i.aggregationFrequency,i.namespace,i.sampleRate)):r.error("Failed to get measure time to register as timer value"),i.clearMarks&&this.clearMarks([i.startMark,i.endMark]),i.clearMeasures&&this.clearMeasures([e])}else r.error("Undefined resource name to register as a measure")}catch(e){r.error(e)}},timer:function(e,t,n){try{if(r.debug("Register Timer",e,t,n),e&&t>=0){n=n||{};var i=new this.metricsData(e,"timer",t,n.tags,n.agg,n.aggFreq,n.namespace,n.sampleRate);this.util.addItemToQueue("metrics",i)}else r.error("Undefined metric name or invalid value to register as a timer")}catch(e){r.error(e)}},counter:function(e,t,n){try{if(r.debug("Register Counter",e,n),t=t||1,e){n=n||{};var i=new this.metricsData(e,"counter",t,n.tags,n.agg,n.aggFreq,n.namespace,n.sampleRate);this.util.addItemToQueue("metrics",i)}else r.error("Undefined metric name to register as a counter")}catch(e){r.error(e)}},gauge:function(e,t,n){try{if(r.debug("Register Gauge",e,t,n),e&&t){n=n||{};var i=new this.metricsData(e,"gauge",t,n.tags,n.agg,n.aggFreq,n.namespace,n.sampleRate);this.util.addItemToQueue("metrics",i)}else r.error("Undefined metric name/value to register as a gauge")}catch(e){r.error(e)}}};return a});
